name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and Test (iOS ${{ matrix.ios }})
    runs-on: macos-15
    strategy:
      matrix:
        ios: ["17.5", "18.0"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.0.app

      - name: Show Xcode and Swift versions
        run: |
          xcodebuild -version
          swift --version

      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Build Swift Package
        run: |
          swift build -c release

      - name: Run Tests with Coverage
        run: |
          swift test --enable-code-coverage --parallel

      - name: Generate Code Coverage Report
        if: matrix.ios == '18.0'
        run: |
          xcrun llvm-cov export -format="lcov" \
            .build/debug/swift-layoutPackageTests.xctest/Contents/MacOS/swift-layoutPackageTests \
            -instr-profile .build/debug/codecov/default.profdata > coverage.lcov

      - name: Upload Coverage to Codecov
        if: matrix.ios == '18.0'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.lcov
          flags: unittests
          name: swift-layout-coverage
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  build-example:
    name: Build Example App
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.0.app

      - name: Cache Xcode DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-deriveddata-${{ hashFiles('Example/**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-deriveddata-

      - name: Build Example App
        run: |
          cd Example
          xcodebuild clean build \
            -project Example.xcodeproj \
            -scheme Example \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=18.0' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty && exit ${PIPESTATUS[0]}
        continue-on-error: true
